{
  "name": "wechat-oauth",
  "version": "1.0.0",
  "description": "微信公共平台OAuth",
  "main": "index.js",
  "scripts": {
    "test": "make test-all"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-webot/wechat-oauth.git"
  },
  "keywords": [
    "weixin",
    "wechat"
  ],
  "dependencies": {
    "urllib": "2.0.2"
  },
  "devDependencies": {
    "supertest": "*",
    "mocha": "*",
    "expect.js": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "muk": "*",
    "rewire": "*",
    "istanbul": "*"
  },
  "author": {
    "name": "Jackson Tian"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "directories": {
    "test": "test"
  },
  "readme": "wechat-oauth\n===============\n\n微信公共平台OAuth接口消息接口服务中间件与API SDK\n\n## 模块状态\n\n- [![NPM version](https://badge.fury.io/js/wechat-oauth.png)](http://badge.fury.io/js/wechat-oauth)\n- [![Build Status](https://travis-ci.org/node-webot/wechat-oauth.png?branch=master)](https://travis-ci.org/node-webot/wechat-oauth)\n- [![Dependencies Status](https://david-dm.org/node-webot/wechat-oauth.png)](https://david-dm.org/node-webot/wechat-oauth)\n- [![Coverage Status](https://coveralls.io/repos/node-webot/wechat-oauth/badge.png)](https://coveralls.io/r/node-webot/wechat-oauth)\n\n## 功能列表\n- OAuth授权\n- 获取基本信息\n\nOAuth2.0网页授权，使用此接口须通过微信认证，如果用户在微信中（Web微信除外）访问公众号的第三方网页，公众号开发者可以通过此接口获取当前用户基本信息（包括昵称、性别、城市、国家）。详见：[官方文档](http://mp.weixin.qq.com/wiki/index.php?title=网页授权获取用户基本信息)\n\n详细参见[API文档](http://node-webot.github.io/wechat-oauth/api.html)\n\n## Installation\n\n```sh\n$ npm install wechat-oauth\n```\n\n## Usage\n\n### 初始化\n引入OAuth并实例化\n\n```js\nvar OAuth = require('wechat-oauth');\nvar client = new OAuth('your appid', 'your secret');\n```\n\n以上即可满足单进程使用。\n当多进程时，token需要全局维护，以下为保存token的接口。\n\n```js\nvar oauthApi = new OAuth('appid', 'secret', function (openid, callback) {\n  // 传入一个根据openid获取对应的全局token的方法\n  fs.readFile(openid +':access_token.txt', 'utf8', function (err, txt) {\n    if (err) {return callback(err);}\n    callback(null, JSON.parse(txt));\n  });\n}, function (openid, token, callback) {\n  // 请将token存储到全局，跨进程、跨机器级别的全局，比如写到数据库、redis等\n  // 这样才能在cluster模式及多机情况下使用，以下为写入到文件的示例\n  // 持久化时请注意，每个openid都对应一个唯一的token!\n  fs.writeFile(openid + ':access_token.txt', JSON.stringify(token), callback);\n});\n```\n\n## 引导用户\n生成引导用户点击的URL\n\n```js\nvar url = client.getAuthorizeURL('redirectUrl', 'state', 'scope');\n```\n\n用户点击上步生成的URL后会被重定向到上步设置的 `redirectUrl`，并且会带有`code`参数，我们可以使用这个`code`换取`access_token`和用户的`openid`\n\n```js\nclient.getAccessToken('code', function (err, result) {\n  var accessToken = result.data.access_token;\n  var openid = result.data.openid;\n});\n```\n\n如果我们生成引导用户点击的URL中`scope`参数值为`snsapi_userinfo`，接下来我们就可以使用`openid`换取用户详细信息（必须在getAccessToken方法执行完成之后）\n\n```js\nclient.getUser('openid', function (err, result) {\n  var userInfo = result;\n});\n```\n\n## 捐赠\n如果您觉得Wechat OAuth对您有帮助，欢迎请作者一杯咖啡\n\n![捐赠wechat](https://cloud.githubusercontent.com/assets/327019/2941591/2b9e5e58-d9a7-11e3-9e80-c25aba0a48a1.png)\n\n或者[![](http://img.shields.io/gratipay/JacksonTian.svg)](https://www.gittip.com/JacksonTian/)\n\n## 交流群\nQQ群：157964097，使用疑问，开发，贡献代码请加群。\n\n## Contributors\n感谢以下贡献者：\n\n```\n$ git summary\n\n project  : wechat-oauth\n repo age : 31 minutes\n active   : 1 days\n commits  : 2\n files    : 10\n authors  :\n     2  Jackson Tian  100.0%\n\n```\n\n## License\nThe MIT license.\n",
  "bugs": {
    "url": "https://github.com/node-webot/wechat-oauth/issues"
  },
  "homepage": "https://github.com/node-webot/wechat-oauth",
  "_id": "wechat-oauth@1.0.0",
  "_from": "wechat-oauth@*"
}
