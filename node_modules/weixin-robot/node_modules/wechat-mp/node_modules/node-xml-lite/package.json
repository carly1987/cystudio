{
  "name": "node-xml-lite",
  "version": "0.0.3",
  "description": "Pure javascript XML ANSI/Unicode SAX parser for Node.js",
  "keywords": [
    "xml",
    "sax",
    "ansi"
  ],
  "dependencies": {
    "iconv-lite": ">=0.2.0"
  },
  "homepage": "http://github.com/hgourvest/node-xml-lite",
  "repository": {
    "type": "git",
    "url": "git://github.com/hgourvest/node-xml-lite"
  },
  "author": {
    "name": "Henri Gourvest",
    "email": "hgourvest@gmail.com",
    "url": "http://github.com/hgourvest"
  },
  "main": "./index.js",
  "readme": "# node-xml-lite\r\n\r\n - This is a pure javascript XML SAX parser for Node.js.\r\n - The specificity of this xml parser is that it can parse a document from a Buffer.\r\n - It relies on iconv-lite to decode the text according to the code page of the document.\r\n\r\n## Install\r\n\r\n    npm install node-xml-lite\r\n\r\n## Simple usage\r\n    \r\n### Parse a file \r\n \r\n    xml = require(\"node-xml-lite\");\r\n    \r\n    xml.parseFile(filename, function(err, root){\r\n      ...\r\n    });\r\n    \r\n### Parse a file synchronously\r\n\r\n    xml.parseFileSync(filename));\r\n    \r\n### Parse a string\r\n\r\n    xml.parseString(\"<xml>hello</xml>\");\r\n\r\n### Parse a buffer\r\n\r\n    xml.parseBuffer(new Buffer(\"<xml>hello</xml>\"));\r\n\r\n## Advanced usage\r\n\r\n### parsing a file in SAX mode\r\n\r\n    xml.SAXParseFile(filename,\r\n      function(state, a, b) {\r\n        switch (state) {\r\n          case xml.xtOpen:\r\n            // a is node name\r\n            ...\r\n            break;\r\n          case xml.xtClose\r\n            ...\r\n            break;\r\n          case xml.xtAttribute:\r\n            // a is attribute name\r\n            // b is attribute value\r\n            ...\r\n            break;\r\n          case xml.xtText:\r\n            // a is a text value\r\n            break;\r\n          case xml.xtCData:\r\n            // a is a CDATA text value\r\n            ...\r\n            break;\r\n          case xml.xtComment\r\n            // a is a comment text value\r\n            ...\r\n            break;\r\n        };\r\n        // tell the parser to continue\r\n        return true;\r\n      },\r\n      function(err){\r\n        // parser done, check error\r\n        ...\r\n      }\r\n    );\r\n    \r\nyou can also use the sync function, \r\n\r\n    xml.SAXParseFileSync(filename, event)\r\n    \r\n### providing your own data to SAX parser\r\n\r\n    var parser = new xml.XMLParser();\r\n    var ret = parser.parserBuffer(buffer, len, event);\r\n    if (ret === true) {\r\n      // stopped by event result\r\n    } else\r\n    if (ret === false) {\r\n      // there is a parsing error at:\r\n      //   parser.line \r\n      //   parser.col\r\n    } else\r\n    if (ret === undefined) {\r\n      // it is ok, continue ...\r\n    }\r\n\r\nyou can also parse a string\r\n\r\n    var ret = parser.parseString(str, event);",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hgourvest/node-xml-lite/issues"
  },
  "_id": "node-xml-lite@0.0.3",
  "dist": {
    "shasum": "ff08beacbb789dcf540413a9a5e4f1fe265ea5e0",
    "tarball": "http://registry.npmjs.org/node-xml-lite/-/node-xml-lite-0.0.3.tgz"
  },
  "_from": "node-xml-lite@~0.0.3",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "hgourvest",
    "email": "hgourvest@gmail.com"
  },
  "maintainers": [
    {
      "name": "hgourvest",
      "email": "hgourvest@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "ff08beacbb789dcf540413a9a5e4f1fe265ea5e0",
  "_resolved": "https://registry.npmjs.org/node-xml-lite/-/node-xml-lite-0.0.3.tgz"
}
